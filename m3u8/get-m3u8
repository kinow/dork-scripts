#!/bin/bash

# set -xuve

# Source: https://stackoverflow.com/a/50952636
# Modifications: while -r to solve a warning in Shellcheck
#                added shebang
#                added call with args
#                use temp dir
#                remove files
# Usage: copy to ~/bin, chmod u+x get-m3u8, then run get-m3u8 /path/to/file.m3u8
# Returns:
#  2 if it fails to change directories while copying files.
#  1 if the arguments provided are invalid.
#  0 upon successfully creating the mp4 file.

# Function: download
# Purpose: Download all the parts of a m3u8 playlist, and ffmpeg-concat them into a mp4 file.
# Parameters:
#  $1: Location of the m3u8 file
# Returns: No return values
# Exports: WORKDIR environment variable
function download-playlist() {
    local workdir
    workdir=$(mktemp -d)
    local input_file
    input_file=$(basename -- "${1}")
    local input_filename="${input_file%.*}"
    local output_file="${input_filename}.mp4"
    pushd "${workdir}" || exit 2
    touch ./files.txt;
    counter=1;
    while read -r line; do
        if [[ "$line" == "http"* ]]; then
            curl --silent -o ${counter}.mp4 "$line";
            echo "file ${counter}.mp4" >> ./files.txt;
            ((counter++));
        fi;
    done < "$1";
    ffmpeg -f concat -safe 0 -i ./files.txt -codec copy "${output_file}"
    popd || exit 2
    mv "${workdir}/${output_file}" .
    export WORKDIR="${workdir}"
}

# Function: cleanup
# Purpose: Called when the EXIT signal is received to clean up directories and files.
# Parameters:
#   WORKDIR (optional environment variable)
# Returns: No return values
# Exports: No exported values
function cleanup() {
    if [[ -v WORKDIR && -d "${WORKDIR}" ]]; then
        rm -rf "${WORKDIR}"
    fi
}

if [[ -z "$1" ]]; then
    echo 'Usage: download-playlist <file.m3u8>';
    exit 1
fi

trap cleanup EXIT
download-playlist "$@"

